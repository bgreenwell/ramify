% Generated by roxygen2 (4.1.0): do not edit by hand
% Please edit documentation in R/mat.R
\name{mat}
\alias{mat}
\alias{mat.character}
\alias{mat.default}
\alias{mat.list}
\title{Matrices}
\usage{
mat(x, ...)

\method{mat}{default}(x, ...)

\method{mat}{character}(x, rows = TRUE, sep = ",", ...)

\method{mat}{list}(x, rows = TRUE, ...)
}
\arguments{
\item{x}{Either a character string or a list.}

\item{...}{Aditional optional arguments.}

\item{rows}{Logical. If TRUE (the default) the matrix is filled by rows,
otherwise the matrix is filled by columns.}

\item{sep}{Separator string. Values within each row/column of x are
separated by this string. Default is \code{","}.}
}
\description{
Like \code{matrix}, \code{mat} creates a matrix from the given set of
values. These values can be represented by either a character string or a
list of vectors.
}
\details{
Be careful when using \code{R} functions within character strings in the
call to \code{mat}. The character string is split according to ';' and then
','. For example, \code{mat('rnorm(10)')} will work, but
\code{mat('rnorm(10, mean = 3)')} will result in an error. A work around would
be to use \code{mat('3 + rnorm(10, mean = 3)')}.
}
\examples{
## Using character vectors
mat('1, 2, 3; 4, 5, 6')
mat('1, 2, 3; 4, 5, 6', rows = TRUE)
mat("1 2 3; 4 5 6", sep = "")
(m <- mat(paste('exp(', 1:9, ')')))
resize(m, nrow = 3)
resize(m, nrow = 3, byrow = FALSE)
matrix(exp(1:9), 3, 3)

## Using a list
mat(list(1:3, 4:6, 7:9))
mat(list(1:3, 4:6, 7:9), rows = TRUE)
}

