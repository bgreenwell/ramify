{
    "contents" : "##' Matrix of Ones\n##' \n##' Creates a matrix of all ones.\n##' \n##' @param nrow The desired number of rows.\n##' @param ncol The desired number of columns.\n##' \n##' @return A matrixof dimension \\code{nrow}-by-\\code{ncol} filled with ones.\nones <- function(nrow, ncol = 1) {\n  matrix(rep(1, nrow * ncol), nrow = nrow, ncol = ncol)\n}\n\n##' Matrix of Zeros\n##' \n##' Creates a matrix of all zeros.\n##' \n##' @param nrow The desired number of rows.\n##' @param ncol The desired number of columns.\n##' \n##' @return A matrixof dimension \\code{nrow}-by-\\code{ncol} filled with zeros.\nzeros <- function(nrow, ncol = 1) {\n  matrix(rep(0, nrow * ncol), nrow = nrow, ncol = ncol)\n}\n\n##' Flatten Matrices\n##'\n##' Flatten (i.e., collapse) a matrix to one dimension.\n##' \n##' @param x A matrix object.\n##' \n##' @return A numeric vector.\nflatten <- function(x) {\n  dim(x) <- NULL  # remove dimension attribute\n  x\n}\n\n##' Resize Matrix\n##' \n##' Returns a new matrix of dimension nrow by ncol using the elements of x.\n##' \n##' @param x A \\code{\"matrix\"} or \\code{R} object.\n##' @param nrow The desired number of rows.\n##' @param ncol The desired number of columns.\n##' @param byrow Logical. If FALSE (the default) the matrix is filled by \n##'              columns, otherwise the matrix is filled by rows.\n##' @return A matrix of dimension \\code{nrow}-by-\\code{ncol}.\nresize <- function(x, nrow, ncol, byrow = TRUE) {\n  \n  ## FIXME: Should resize return x by default.\n  \n  ## Make sure x is a matrix. If it's not, try converting it.\n  if (!is.matrix(x)) {\n    x <- as.matrix(x)\n  }\n  \n  ## Check dimensions (if supplied)\n  if (missing(nrow) && missing(ncol)) {\n    nrow <- dim(x)[1]\n    ncol <- dim(x)[2]\n  }\n  if (missing(nrow) && !missing(ncol)) {\n    if (length(x) %% ncol != 0) {\n      stop(\"dimension mismatch.\", call. = FALSE)\n    }\n    nrow <- length(x) / ncol\n  }\n  if (!missing(nrow) && missing(ncol)) {\n    if (length(x) %% nrow != 0) {\n      stop(\"dimension mismatch.\", call. = FALSE)\n    }\n    ncol <- length(x) / nrow\n  }\n  if (nrow * ncol != length(x)) {\n    stop(\"dimension mismatch.\", call. = FALSE)\n  }\n  if (!inherits(x, \"matrix\")) {\n    stop(\"x must be of class 'matrix'.\", call. = FALSE)\n  }\n  \n  ## Return matrix with new dimensions\n  if (byrow) {\n    attr(x, \"dim\") <- c(ncol, nrow) \n    t(x)\n  } else {\n    attr(x, \"dim\") <- c(nrow, ncol) \n    x\n  }\n  \n}",
    "created" : 1424534213480.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "3706856203",
    "id" : "FD89682D",
    "lastKnownWriteTime" : 1424533090,
    "path" : "~/Desktop/Dropbox/devel/ramify/R/convenience.R",
    "project_path" : "R/convenience.R",
    "properties" : {
    },
    "source_on_save" : false,
    "type" : "r_source"
}